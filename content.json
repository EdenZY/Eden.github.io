{"meta":{"title":"EdenZY","subtitle":null,"description":"just a boke","author":"Eden","url":"http://yoursite.com"},"pages":[{"title":"just a start","date":"2018-09-02T03:59:54.000Z","updated":"2018-09-02T03:59:54.515Z","comments":true,"path":"just-a-start/index.html","permalink":"http://yoursite.com/just-a-start/index.html","excerpt":"","text":""},{"title":"主机 发现","date":"2019-09-28T14:05:26.000Z","updated":"2019-09-28T14:05:26.008Z","comments":true,"path":"主机-发现/index.html","permalink":"http://yoursite.com/主机-发现/index.html","excerpt":"","text":""}],"posts":[{"title":"主机发现总结","slug":"主机发现总结","date":"2019-09-28T13:50:25.000Z","updated":"2019-09-29T12:03:10.915Z","comments":true,"path":"2019/09/28/主机发现总结/","link":"","permalink":"http://yoursite.com/2019/09/28/主机发现总结/","excerpt":"","text":"在渗透测试中，主机发现通常会是经常用的一项技能，最近在谷安上跟着一个课程学习，随便记录总结一下，方便以后查询 这里网络发现的是根据 ISO七层 模型来发现的 首先是二层发现这是网络拓扑图，本次测试中用 Kali 对内网主机进行扫描(Windows IP:192.168.123.85) Arping arping命令使用：arping [-fqbDUAV] [-c count] [-w timeout] [-I device] [-s source] ip Arping 一次只能检测一台主机的存活情况，如果需要批量检测的话，需要配合脚本使用直接 arping ip 命令会一直运行，直到手动停止 Ctrl+ c若主机存活如果主机不在线所以一般用 arping ip -c 1 参数 -c是指定发包次数，对于不在线的主机不用一直等待，自动结束 如果用 arp扫描整个网段的话，用 shell 脚本可以实现1234567891011#!/bin/bashif [ \"$#\" -ne 1 ]then echo \"Usage - ./arping.sh [interface]\" echo \"Example - ./arping.sh eth0\" exit fiprefix=$(ifconfig $1 | grep 'netmask' | cut -d 't' -f 2 | cut -d '.' -f 1-3)for addr in $(seq 1 254);do arping -c 1 $prefix.$addr | grep \"reply from\" | cut -d \" \" -f 4 &gt;&gt; addr1.txtdone 也可以用 shell 脚本测试文本中的 IP 是否存活 123456789101112#!/bin/bashif [ \"$#\" -ne 1 ]then echo \"Usage - ./arping.sh [filename]\" echo \"Example - ./arping.sh addr.txt\" echo \"Example will verify an ARP list which ip up\" exitfifile=$1for addr in $(cat $file); do arping -c 1 $addr | grep \"reply from\" | cut -d \" \" -f 4done apring 还有个很大用处是： -D 检测局域网内的IP地址冲突问题 arping -c 3 -f -D ip 返回空，说明这个IP地址没有被局域网占用。 Nmap Nmap 是一个非常强大的工具，这里仅用作二层网络发现nmap -sn CIDR 直接扫描整个网段网络中共有四台存活的IP，这里用 -sn 只发现了三个（没有发现手机的…）优点是速度很快 nmap 也可以扫描指定文件中的 IP nmap -iL -sn file 这里 L 是大写 Netdiscover netdiscover 可以直接扫描整个网段 IP netdiscover -i eth0 -r 1.1.1.1/24这里 netdiscover 只发现了两个（又忽略了自己…）好处是能识别出常见设备主动的方式扫描文件里的 IP netdiscover -l ip.txtnetdiscover 被动收集信息 netdiscover -p当网络中有通信时，立即就可以嗅探到 IP，不过需要时间，绝对隐匿 Scapy kali 中直接 Terminal 键入 scapy 进入：scapy 中函数名称都要大写 ARP()可以自定义包中内容，通过对变量进行赋值，从而调用Sr1()函数发送包：目标 IP 有回应，说明主机存活。 Scapy + Python 本来是很简单的几句代码，我可能把所有的坑都踩了一遍，弄到第二天才完成，下面是踩坑记录： 首先 pip install scapy 安装 scapy 模块，然后在 python 中导入模块import scapy 写完代码，给权限 chmod +x scapy.py 准备测试结果：第一个坑就来啦：说 sr1() 没有定义，本来这个函数名看起来怪，我怀疑我写错了，就去官网查了下，确定有并且没错，然后又去查资料：原来在 Python 中用 from scapy.all import * 导入 scapyOK 改正之后继续执行：错误提示：上面的命令有问题？…本来 python中这样导入包就不常见，然后又报这样的错，我严重怀疑我上个问题没找到正确答案，然后：文件名的锅？ 改文件名再试试：一下就跑起来了，文件名不能包含任何 scapy 的字样！太坑了… 利用 Sacpy 扫描文件列表中 IP： Summary 这就是二层主机发现的一些方法，可以看出不同工具之间各方面存在一定差异批量扫描速度比较：nmap &gt; netdiscover &gt; apring &gt; scapy仅在二层发现中 准确性比较：nmap = arping &gt; netdiscover = scapy扫描结果详情展示：netdiscover &gt; nmap &gt; arping = scapy可以看到二层扫描结果差强人意，后面有时间再总结下三层和四层的主机扫描比如： 总的来说，不同时间不同网络，会有不同的发现…","categories":[],"tags":[{"name":"kali","slug":"kali","permalink":"http://yoursite.com/tags/kali/"},{"name":"主机发现","slug":"主机发现","permalink":"http://yoursite.com/tags/主机发现/"},{"name":"渗透","slug":"渗透","permalink":"http://yoursite.com/tags/渗透/"}]},{"title":"Picture test","slug":"test","date":"2018-09-03T08:38:01.000Z","updated":"2018-09-03T08:47:42.220Z","comments":true,"path":"2018/09/03/test/","link":"","permalink":"http://yoursite.com/2018/09/03/test/","excerpt":"","text":"first picture","categories":[],"tags":[]},{"title":"Eden","slug":"whoami","date":"2018-09-02T04:18:16.000Z","updated":"2019-09-29T02:59:08.452Z","comments":true,"path":"2018/09/02/whoami/","link":"","permalink":"http://yoursite.com/2018/09/02/whoami/","excerpt":"","text":"About Me 一个莫名其妙的，喜欢敲代码，喜欢研究技术的，表面上高冷、不苟言笑的， 偶尔又嬉皮笑脸，偶尔又特立独行的，多重性格的技术爱好者！ Life Attitude Meet more outstanding people, and become. Little Hobby 喜欢写点爬虫，喜欢渗透，对新的事物感兴趣 Contact Me Email: edenz11111y@gmail.com","categories":[],"tags":[{"name":"Myself","slug":"Myself","permalink":"http://yoursite.com/tags/Myself/"}]},{"title":"'just a start'","slug":"just-a-start","date":"2018-09-02T02:54:03.000Z","updated":"2019-09-28T14:27:10.647Z","comments":true,"path":"2018/09/02/just-a-start/","link":"","permalink":"http://yoursite.com/2018/09/02/just-a-start/","excerpt":"","text":"Just a start 前两天一次偶然的机会弄到了一个域名，为了不浪费，忙活了两天，终于克服重重困难，我的第一个博客建成了 这种久违的感觉， 记得曾经有过…希望这个博客能让我重获新生，（放假了嘛，在家里堕落，百无聊赖中唯一做的一件事），建博客不为别的，只想为自己找点事做，在睡前饭后…（真的快被手机束缚了）顺便记录下身边的点滴，发表一下感慨，分享生活啦~ 就想试试用 markdown 写文章的感觉 还有就是更新一下动态，代表我还存在着,… print(&quot;第一次试水还不错，希望我能把自己的一些感受记录下来，分享在这里&quot;) 写文章看心情，或许哪天这篇文章就不存在了那也挺正常的… bye ~","categories":[],"tags":[]}]}